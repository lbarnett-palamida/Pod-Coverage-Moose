NAME
    Pod::Coverage::Moose - Pod::Coverage extension for Moose

SYNOPSIS
      use Pod::Coverage::Moose;

      my $pcm = Pod::Coverage::Moose->new(package => 'MoosePackage');
      print 'Coverage: ', $pcm->coverage, "\n";

DESCRIPTION
    When using Pod::Coverage in combination with Moose, it will report any
    method imported from a Role. This is especially bad when used in
    combination with Test::Pod::Coverage, since it takes away its ease of
    use.

    To use this module in combination with Test::Pod::Coverage, use
    something like this:

      use Test::Pod::Coverage;
      all_pod_coverage_ok({ coverage_class => 'Pod::Coverage::Moose'});

ATTRIBUTES
  package
    This is the package used for inspection.

METHODS
  meta
    Moose meta object.

  BUILD
    Initialises the internal Pod::Coverage object. It uses the meta object
    to find all methods and attribute methods imported via roles.

DELEGATED METHODS
  Delegated to the traditional Pod::Coverage object are
    coverage
    covered
    naked
    uncovered
    why_unrated

EXTENDED METHODS
  new
    The constructor will only return a "Pod::Coverage::Moose" object if it
    is invoked on a class that "can" a "meta" method. Otherwise, a
    traditional Pod::Coverage object will be returned. This is done so you
    don't get in trouble for mixing Moose with non Moose classes in your
    project.

SEE ALSO
    Moose, Pod::Coverage, Test::Pod::Coverage

AUTHOR
    Robert 'phaylon' Sedlacek <rs@474.at>

COPYRIGHT AND LICENSE
    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

